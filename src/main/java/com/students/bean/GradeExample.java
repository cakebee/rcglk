package com.students.bean;

import java.util.ArrayList;
import java.util.List;

public class GradeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public GradeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andStuIdIsNull() {
            addCriterion("STU_ID is null");
            return (Criteria) this;
        }

        public Criteria andStuIdIsNotNull() {
            addCriterion("STU_ID is not null");
            return (Criteria) this;
        }

        public Criteria andStuIdEqualTo(String value) {
            addCriterion("STU_ID =", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotEqualTo(String value) {
            addCriterion("STU_ID <>", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdGreaterThan(String value) {
            addCriterion("STU_ID >", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdGreaterThanOrEqualTo(String value) {
            addCriterion("STU_ID >=", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdLessThan(String value) {
            addCriterion("STU_ID <", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdLessThanOrEqualTo(String value) {
            addCriterion("STU_ID <=", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdLike(String value) {
            addCriterion("STU_ID like", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotLike(String value) {
            addCriterion("STU_ID not like", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdIn(List<String> values) {
            addCriterion("STU_ID in", values, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotIn(List<String> values) {
            addCriterion("STU_ID not in", values, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdBetween(String value1, String value2) {
            addCriterion("STU_ID between", value1, value2, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotBetween(String value1, String value2) {
            addCriterion("STU_ID not between", value1, value2, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuNameIsNull() {
            addCriterion("STU_NAME is null");
            return (Criteria) this;
        }

        public Criteria andStuNameIsNotNull() {
            addCriterion("STU_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andStuNameEqualTo(String value) {
            addCriterion("STU_NAME =", value, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameNotEqualTo(String value) {
            addCriterion("STU_NAME <>", value, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameGreaterThan(String value) {
            addCriterion("STU_NAME >", value, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameGreaterThanOrEqualTo(String value) {
            addCriterion("STU_NAME >=", value, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameLessThan(String value) {
            addCriterion("STU_NAME <", value, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameLessThanOrEqualTo(String value) {
            addCriterion("STU_NAME <=", value, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameLike(String value) {
            addCriterion("STU_NAME like", value, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameNotLike(String value) {
            addCriterion("STU_NAME not like", value, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameIn(List<String> values) {
            addCriterion("STU_NAME in", values, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameNotIn(List<String> values) {
            addCriterion("STU_NAME not in", values, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameBetween(String value1, String value2) {
            addCriterion("STU_NAME between", value1, value2, "stuName");
            return (Criteria) this;
        }

        public Criteria andStuNameNotBetween(String value1, String value2) {
            addCriterion("STU_NAME not between", value1, value2, "stuName");
            return (Criteria) this;
        }

        public Criteria andAvgPonitIsNull() {
            addCriterion("AVG_PONIT is null");
            return (Criteria) this;
        }

        public Criteria andAvgPonitIsNotNull() {
            addCriterion("AVG_PONIT is not null");
            return (Criteria) this;
        }

        public Criteria andAvgPonitEqualTo(Float value) {
            addCriterion("AVG_PONIT =", value, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitNotEqualTo(Float value) {
            addCriterion("AVG_PONIT <>", value, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitGreaterThan(Float value) {
            addCriterion("AVG_PONIT >", value, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitGreaterThanOrEqualTo(Float value) {
            addCriterion("AVG_PONIT >=", value, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitLessThan(Float value) {
            addCriterion("AVG_PONIT <", value, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitLessThanOrEqualTo(Float value) {
            addCriterion("AVG_PONIT <=", value, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitIn(List<Float> values) {
            addCriterion("AVG_PONIT in", values, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitNotIn(List<Float> values) {
            addCriterion("AVG_PONIT not in", values, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitBetween(Float value1, Float value2) {
            addCriterion("AVG_PONIT between", value1, value2, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvgPonitNotBetween(Float value1, Float value2) {
            addCriterion("AVG_PONIT not between", value1, value2, "avgPonit");
            return (Criteria) this;
        }

        public Criteria andAvrGradeIsNull() {
            addCriterion("AVR_GRADE is null");
            return (Criteria) this;
        }

        public Criteria andAvrGradeIsNotNull() {
            addCriterion("AVR_GRADE is not null");
            return (Criteria) this;
        }

        public Criteria andAvrGradeEqualTo(Integer value) {
            addCriterion("AVR_GRADE =", value, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeNotEqualTo(Integer value) {
            addCriterion("AVR_GRADE <>", value, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeGreaterThan(Integer value) {
            addCriterion("AVR_GRADE >", value, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeGreaterThanOrEqualTo(Integer value) {
            addCriterion("AVR_GRADE >=", value, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeLessThan(Integer value) {
            addCriterion("AVR_GRADE <", value, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeLessThanOrEqualTo(Integer value) {
            addCriterion("AVR_GRADE <=", value, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeIn(List<Integer> values) {
            addCriterion("AVR_GRADE in", values, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeNotIn(List<Integer> values) {
            addCriterion("AVR_GRADE not in", values, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeBetween(Integer value1, Integer value2) {
            addCriterion("AVR_GRADE between", value1, value2, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrGradeNotBetween(Integer value1, Integer value2) {
            addCriterion("AVR_GRADE not between", value1, value2, "avrGrade");
            return (Criteria) this;
        }

        public Criteria andAvrRankIsNull() {
            addCriterion("AVR_RANK is null");
            return (Criteria) this;
        }

        public Criteria andAvrRankIsNotNull() {
            addCriterion("AVR_RANK is not null");
            return (Criteria) this;
        }

        public Criteria andAvrRankEqualTo(String value) {
            addCriterion("AVR_RANK =", value, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankNotEqualTo(String value) {
            addCriterion("AVR_RANK <>", value, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankGreaterThan(String value) {
            addCriterion("AVR_RANK >", value, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankGreaterThanOrEqualTo(String value) {
            addCriterion("AVR_RANK >=", value, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankLessThan(String value) {
            addCriterion("AVR_RANK <", value, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankLessThanOrEqualTo(String value) {
            addCriterion("AVR_RANK <=", value, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankLike(String value) {
            addCriterion("AVR_RANK like", value, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankNotLike(String value) {
            addCriterion("AVR_RANK not like", value, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankIn(List<String> values) {
            addCriterion("AVR_RANK in", values, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankNotIn(List<String> values) {
            addCriterion("AVR_RANK not in", values, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankBetween(String value1, String value2) {
            addCriterion("AVR_RANK between", value1, value2, "avrRank");
            return (Criteria) this;
        }

        public Criteria andAvrRankNotBetween(String value1, String value2) {
            addCriterion("AVR_RANK not between", value1, value2, "avrRank");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grade
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 13 20:48:35 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grade
     *
     * @mbggenerated Tue Mar 13 20:48:35 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}